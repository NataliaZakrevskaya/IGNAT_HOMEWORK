{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-plus.tsx","p2-homeworks/h5/RoutesComponent.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","to","Error404","Message","props","className","s","messageContainer","avatar","src","img","alt","nameAndText","name","message","time","messageData","HW1","Affair","affairContainer","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","container","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","norlamInput","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","newName","currentTarget","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","Junior","JuniorPlus","PATH","RoutesComponent","path","element","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4c1cc218.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageContainer\":\"Message_messageContainer__1iy3O\",\"avatar\":\"Message_avatar__2WHiO\",\"img\":\"Message_img___ie_p\",\"nameAndText\":\"Message_nameAndText__-oFSf\",\"time\":\"Message_time__2H4X1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3ruOu\",\"input\":\"SuperInputText_input__1RKyL\",\"errorInput\":\"SuperInputText_errorInput__1LYj-\",\"error\":\"SuperInputText_error__3UsMA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairContainer\":\"Affairs_affairContainer__1rE2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__7K8oM\",\"red\":\"SuperButton_red__30wnx\",\"button\":\"SuperButton_button__HkYVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1UUkV\",\"error\":\"Greeting_error__37ODu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2hq3J\",\"column\":\"HW4_column__1VrQL\",\"testSpanError\":\"HW4_testSpanError__3KT52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2n5X4\",\"spanClassName\":\"SuperCheckbox_spanClassName__2ATo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3R90Q\"};","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nfunction Header() {\n    return (\n        <div>\n            <NavLink to={'/pre-junior'}>Pre-junior</NavLink>\n            <NavLink to={'/junior'}>Junior</NavLink>\n            <NavLink to={'/junior-plus'}>Pre-junior</NavLink>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\nimport s from './Message.module.css'\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.messageContainer}>\n            <div className={s.avatar}>\n                <img src={props.avatar} className={s.img} alt={'avatar'}/>\n            </div>\n            <div className={s.nameAndText}>\n                <div>{props.name}</div>\n                <div>{props.message}</div>\n            </div>\n            <div className={s.time}>{props.time}</div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Masha Ivanova',\n    message: 'Hello! How are you?)',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div className={s.affairContainer}>\n            <div>\n           <span>{`${props.affair.name}    `}</span>\n            <span>{props.affair.priority}</span>\n            </div>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, {Dispatch, SetStateAction} from 'react'\nimport Affair from './Affair'\nimport {AffairsType, AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairsType\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n\n    return (\n        <div className={s.container}>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\nexport type AffairsType = Array<AffairType>\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairsType = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairsType, filter: FilterType): AffairsType => {\n    if (filter === 'all') return affairs\n    if (filter === 'high') {\n        return affairs.filter(a => a.priority === 'high')\n    }\n    if (filter === 'middle') {\n        return affairs.filter(a => a.priority === 'middle')\n    }\n    if (filter === 'low') {\n        return affairs.filter(a => a.priority === 'low')\n    } else {\n        return affairs;\n    }\n}\nexport const deleteAffair = (affairs: AffairsType, _id: number): AffairsType => {\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairsType>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: any) => void// need to fix any\n    addUser: () => void // need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : s.norlamInput // need to fix with (?:)\n\n    return (\n        <div>\n            <div>\n                <input value={name} onChange={setNameCallback} className={inputClass}/>\n                <button onClick={addUser}>add</button>\n                <span>{totalUsers}</span>\n            </div>\n            {error}\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {useState} from 'react'\nimport Greeting from './Greeting'\nimport {UsersType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UsersType\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string | null>(null) // need to fix any\n\n    const setNameCallback = (e: any) => { // need to fix any\n        let newName = e.currentTarget.value\n        setName(newName.trim())\n    }\n    const addUser = () => {\n        if (name !== '') {\n            setError(null)\n            addUserCallback(name)\n            alert(`Hello ${name} !`)\n        } else {\n            setError('Enter valid name, please')\n        }\n        setName('')\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\nexport type UsersType = Array<UserType>\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UsersType>([])\n\n    const addUserCallback = (name: string) => {\n        let newUser = {_id: v1(), name: name}\n        setUsers([newUser, ...users])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput } ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    //spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\n\r\nexport function Junior() {\r\n    return (\r\n        <div>\r\n            <h1>Junior</h1>\r\n            {/*<HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <HW10/>*/}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport function JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <h1>JuniorPlus</h1>\r\n            {/*<HW11/>\r\n            <HW12/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Navigate, Routes, Route} from \"react-router-dom\";\nimport Error404 from \"./pages/Error404\";\nimport PreJunior from \"./pages/PreJunior\";\nimport {Junior} from \"./pages/Junior\";\nimport {JuniorPlus} from \"./pages/Junior-plus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    // add paths\n}\n\nfunction RoutesComponent() {\n\n    return (\n        <div>\n\n            {/*Switch выбирает первый подходящий роут*/}\n            <Routes>\n\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                {/*//@ts-ignore*/}\n                <Route path={'/'} element={() => <Navigate to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} element={() => <PreJunior/>}/>\n\n                // add routes\n                <Route path={PATH.JUNIOR} element={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} element={() => <JuniorPlus/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route element={() => <Error404/>}/>\n\n            </Routes>\n        </div>\n    )\n}\n\nexport default RoutesComponent\n","import React from 'react'\nimport Header from './Header'\nimport RoutesComponent from './RoutesComponent'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <RoutesComponent/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*<HW1/>\n            <br/>\n            <HW2/>\n            <br/>\n            <HW3/>\n            <br/>\n            <HW4/>*/}\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}